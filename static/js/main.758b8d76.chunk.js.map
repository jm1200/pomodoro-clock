{"version":3,"sources":["App.js","serviceWorker.js","index.js","sounds/beep.wav"],"names":["accurateInterval","require","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentState","currentTime","sessionTime","breakTime","running","timerFunc","handleClick","bind","assertThisInitialized","handleStart","handleReset","decrementTime","convertTime","switchState","e","incOrDec","setState","_this2","clear","beep","document","getElementById","play","time","minutes","Math","floor","seconds","pause","_this3","react_default","a","createElement","className","id","onClick","src","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.758b8d76.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport beep from \"./sounds/beep.wav\";\n\nvar accurateInterval = require(\"accurate-interval\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentState: \"Session\",\n      currentTime: 1500,\n      sessionTime: 25,\n      breakTime: 5,\n      running: false,\n      timerFunc: \"\"\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleStart = this.handleStart.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.decrementTime = this.decrementTime.bind(this);\n    this.convertTime = this.convertTime.bind(this);\n    this.switchState = this.switchState.bind(this);\n  }\n\n  handleClick(e, state, incOrDec) {\n    if (!this.state.running) {\n      switch (state) {\n        case \"Session\": {\n          if (incOrDec == \"up\" && this.state.sessionTime < 60) {\n            this.setState({\n              sessionTime: this.state.sessionTime + 1,\n              currentTime: this.state.currentTime + 60\n            });\n            break;\n          } else if (this.state.sessionTime >= 60) {\n            break;\n          } else {\n            if (this.state.sessionTime < 2) {\n              break;\n            }\n            this.setState({\n              sessionTime: this.state.sessionTime - 1,\n              currentTime: this.state.currentTime - 60\n            });\n            break;\n          }\n        }\n        case \"Break\": {\n          if (incOrDec == \"up\" && this.state.breakTime < 60) {\n            this.setState({\n              breakTime: this.state.breakTime + 1\n            });\n            break;\n          } else if (this.state.breakTime >= 60) {\n            break;\n          } else {\n            if (this.state.breakTime == 1) {\n              break;\n            }\n            this.setState({\n              breakTime: this.state.breakTime - 1\n            });\n            break;\n          }\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  handleStart() {\n    if (!this.state.running) {\n      this.setState({\n        running: !this.state.running,\n        timerFunc: accurateInterval(() => {\n          this.decrementTime();\n        }, 1000)\n      });\n    } else {\n      this.state.timerFunc.clear();\n      this.setState({\n        running: !this.state.running\n      });\n    }\n  }\n  decrementTime() {\n    if (this.state.running) {\n      this.setState({\n        currentTime: this.state.currentTime - 1\n      });\n      if (this.state.currentTime < 0) {\n        let beep = document.getElementById(\"beep\");\n        //console.log(beep);\n        beep.currentTime = 0;\n        beep.play();\n        this.switchState();\n      }\n    }\n  }\n  switchState() {\n    if (this.state.currentState == \"Session\") {\n      this.setState({\n        currentState: \"Break\",\n        currentTime: this.state.breakTime * 60\n      });\n    } else {\n      this.setState({\n        currentState: \"Session\",\n        currentTime: this.state.sessionTime * 60\n      });\n    }\n  }\n  convertTime() {\n    let time = this.state.currentTime;\n    let minutes = Math.floor(time / 60);\n    let seconds = time % 60;\n    if (seconds < 10) {\n      seconds = \"0\" + seconds;\n    }\n    if (minutes < 10) {\n      minutes = \"0\" + minutes;\n    }\n\n    return minutes + \":\" + seconds;\n  }\n\n  handleReset() {\n    let beep = document.getElementById(\"beep\");\n    //console.log(beep);\n    beep.pause();\n    beep.currentTime = 0;\n    this.setState({\n      sessionTime: 25,\n      breakTime: 5,\n      running: false,\n      currentState: \"Session\",\n      currentTime: 1500\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"clock-container\">\n          <div id=\"controls-container\">\n            <div id=\"title\">Pomodoro Clock</div>\n            <div id=\"controls\">\n              <div className=\"control\">\n                <div id=\"break-label\">Break Length</div>\n                <div className=\"inc-dec\">\n                  <div\n                    id=\"break-increment\"\n                    onClick={e => this.handleClick(e, \"Break\", \"up\")}\n                  >\n                    <i className=\"fa fa-arrow-up\" />\n                  </div>\n                  <div id=\"break-length\">{this.state.breakTime}</div>\n                  <div\n                    id=\"break-decrement\"\n                    onClick={e => this.handleClick(e, \"Break\", \"down\")}\n                  >\n                    <i className=\"fa fa-arrow-down\" />\n                  </div>\n                </div>\n              </div>\n              <div className=\"control\">\n                <div id=\"session-label\">Session Length</div>\n                <div className=\"inc-dec\">\n                  <div\n                    id=\"session-increment\"\n                    onClick={e => this.handleClick(e, \"Session\", \"up\")}\n                  >\n                    <i className=\"fa fa-arrow-up\" />\n                  </div>\n                  <div id=\"session-length\">{this.state.sessionTime}</div>\n                  <div\n                    id=\"session-decrement\"\n                    onClick={e => this.handleClick(e, \"Session\", \"down\")}\n                  >\n                    <i className=\"fa fa-arrow-down\" />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div id=\"buttons-container\">\n              <div id=\"start_stop\" onClick={this.handleStart}>\n                Start/Stop\n              </div>\n              <div id=\"reset\" onClick={this.handleReset}>\n                Reset\n              </div>\n            </div>\n          </div>\n          <div id=\"clock\">\n            <div id=\"timer-label\">{this.state.currentState}</div>\n            <div id=\"time-left\">{this.convertTime()}</div>\n          </div>\n        </div>\n        <audio id=\"beep\" src={beep} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/beep.dd74effe.wav\";"],"sourceRoot":""}